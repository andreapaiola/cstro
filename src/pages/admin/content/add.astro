---
import Layout from '../../../layouts/Layout.astro';
import Editor from '../../../components/Editor.astro';
import { db, eq, Config, Author } from 'astro:db';

const config = await db.select().from(Config);
const site = config[0];

const authors = await db.select().from(Author);

export const prerender = false;

---
<Layout title={'Add Content to' + ' ' + site.name }>
    <div class="wrapper" style="padding: 2rem 0;">
      <a href="/admin/content">Back to Admin Content</a>
      <h1>Add Content to {site.name}
        <button class="save">Save</button>
      </h1>
      <div class="inputs">
        <div class="input-item">
          <label for="published">Published: </label><input type="checkbox" name="published" id="published" checked />
        </div>
        <div class="input-item">
          <label for="title">Title:</label> <input type="text" value="" id="title">
        </div>
        <div class="input-item">
          <label for="alias">Alias:</label> <input type="text" value="" id="alias">
        </div>
        <div class="input-item">
          <label for="author">Author:</label>
          <select name="author" id="author">
            {authors.map((item) => (
              <option value={item.id}>{item.name}</option>
            ))}
          </select>
        </div>
      </div>
    </div>
    <Editor body="" />
    <div class="wrapper" style="padding: 2rem 0;">
      <button class="save">Save</button>
  </div>
</Layout>

<link rel="stylesheet" href="/styles/global.css" />
<link rel="stylesheet" href="/styles/admin.css" />

<script is:inline>
const addButtons = document.querySelectorAll('button.save');

addButtons.forEach((button) => {
  button.addEventListener('click', async () => {
    //console.log('save',window.editor.getData())
    const jsonData = {
      data: {
        authorId: document.getElementById('author').value,
        alias: document.getElementById('alias').value,
        title: document.getElementById('title').value,
        body: document.getElementById('host').shadowRoot.getElementById('editor').innerHTML,
        published: document.getElementById('published').checked,
      }
    }
    const response = await fetch("/admin/api/contents/add.json",
    {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify(jsonData)
    }).then(response => {
        response.json().then(body => {
          console.log('body: ',body)
            if (response.status === 200) {
              //console.log(body)
              window.location.replace('/admin/content/'+body.id+'/edit')
            } else {
                throw body
            }
        })
    })
  })
})

document.getElementById('title').addEventListener('input', async function (event) {
  //console.log(event.target.value)
  alias.value = event.target.value.replaceAll(' ','-').replaceAll('--','-').toLocaleLowerCase()
  alias.dispatchEvent(new Event('input'));
});

const alias = document.getElementById('alias')
alias.addEventListener('input', async function (event) {
  const jsonData = {
        data: {
          alias: alias.value,
        }
      }
    const response = await fetch("/admin/api/contents/test.json",
      {
        method: 'POST',
        headers: {'Content-Type':'application/json'},
        body: JSON.stringify(jsonData)
      }).then(response => {
        response.json().then(body => {
          console.log('body: ',body)
            if (response.status === 200) {
              //console.log(body)
              if(body[0]){
                alias.classList.add('input-error')
                let message = document.createElement('p')
                message.classList.add('message-error')
                message.append('Duplicate alias, please change it')
                alias.parentElement.append(message)
              }
              else{
                alias.classList.remove('input-error')
                Array.from(alias.parentElement.getElementsByClassName('message-error')).forEach(function(element,index){
                  console.log('element',element)
                  element.remove()
                })
              }
            } else {
                throw body
            }
        })
  });
})


</script>